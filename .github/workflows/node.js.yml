# Este fluxo de trabalho realizará uma instalação limpa das dependências do Node.js,
# fará cache e restauração dessas dependências, criará o código-fonte e executará testes
# em diferentes versões do Node.js.
# Para obter mais informações, consulte: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

# Define quando esse fluxo de trabalho será acionado:
# - No caso de push (envio de código) para a branch "master".
# - No caso de pull request (solicitação de envio de código) para a branch "master".
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:

    # Define o sistema operacional onde o trabalho será executado.
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # Veja o cronograma de versões suportadas do Node.js em https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Utilizar o Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build

  # Tarefa de Implantação
  deploy:
    name: Publicar no GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Publicar no GitHub Pages
        env:
          # Adicione sua chave SSH privada criptografada aqui (caso seja um repositório privado)
          # Use um segredo do GitHub para armazenar a chave privada com segurança.
          # Exemplo: GH_PAGES_DEPLOY_KEY: ${{ secrets.GH_PAGES_DEPLOY_KEY }}
          ID_TOKEN: ${{ secrets.GH_PAGES_DEPLOY_KEY }}
        uses: peaceiris/actions-gh-pages@v3 # Utilizando uma ação popular de implantação no GitHub Pages
        with:
          publish_dir: ./build # Modifique para o caminho do diretório onde estão os arquivos de build
          publish_branch: gh-pages # Especifique a branch na qual os arquivos serão publicados (normalmente "gh-pages" para GitHub Pages)
